@model TnpdModels.Wanda

<div class="row">
    <div class="col-12">

        <h4 class="h4title">@Model.Subject</h4>

        <dl class="row dl-text text-left">
            <dt class="col-md-2">發布單位：</dt>
            <dd class="col-md-10">@Model.initOrg</dd>
            <dt class="col-md-2">內　　容： </dt>
            <dd class="col-md-10">@Html.Raw(Model.Article)</dd>
        </dl>

        <div class="mb-4">
            <style>
      /* Always set the map height explicitly to define the size of the div
       * element that contains the map. */
      #map {
        height: 500px;
      }
    
      #floating-panel {
        position: absolute;
        top: 10px;
        left: 25%;
        z-index: 5;
        background-color: #fff;
        padding: 5px;
        border: 1px solid #999;
        text-align: center;
        font-family: 'Roboto','sans-serif';
        line-height: 30px;
        padding-left: 10px;
      }
    </style>
 
    <div id="floating-panel" style="display:none">
    <label for="mode">Mode of Travel: </label>
    <select id="mode">
	<option value="TRANSIT">Transit</option>
      <option value="DRIVING">Driving</option>
      <option value="WALKING">Walking</option>
      <option value="BICYCLING">Bicycling</option>
      
    </select>
    </div>
    <div id="map"></div>
    <script>
      function initMap() {
        var directionsDisplay = new google.maps.DirectionsRenderer;
        var directionsService = new google.maps.DirectionsService;
        var map = new google.maps.Map(document.getElementById('map'), {
          zoom: 14,
          center: {lat: 23.305988,  lng: 120.317283}
        });
        directionsDisplay.setMap(map);

        calculateAndDisplayRoute(directionsService, directionsDisplay);
        document.getElementById('mode').addEventListener('change', function() {
          calculateAndDisplayRoute(directionsService, directionsDisplay);
        });
      }

      function calculateAndDisplayRoute(directionsService, directionsDisplay) {
        var selectedMode = document.getElementById('mode').value;
		 var start = "@Model.beginning";
        var end = "@Model.destination";
        directionsService.route({
          origin: start,  // Haight.
            destination: end,  // Ocean Beach.
          // Note that Javascript allows us to access the constant
          // using square brackets and a string value as its
          // "property."
          travelMode: google.maps.TravelMode[selectedMode]
        }, function(response, status) {
          if (status == 'OK') {
            directionsDisplay.setDirections(response);
          } else {
            window.alert('Directions request failed due to ' + status);
          }
        });
      }
    </script>
    <script async defer
    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyC631kTAWg6pT3b3w3sFaD8xhxxASuM7xI&callback=initMap">
    </script>
        </div>

    </div>

</div>
