@using ModelLibrary.Models
<head>
    <link href="~/Content/Chart.css" rel="stylesheet" />
</head>

@{
    var suppliers = (string[])ViewBag.suppliers;
    var sorts = (string[])ViewBag.Sorts;
    var startDate = new DateTime(DateTime.Now.Year,1,1).ToString("yyyy/MM/dd");
    var endDate = new DateTime(DateTime.Now.Year,12,31).ToString("yyyy/MM/dd");
}





<h1 class="indexTitle col-11 offset-1 ">
    維修原因統計
</h1>


<div class="col-8 offset-3">
    @*<h6 class="pl-2 ">請選擇統計範圍</h6>*@
    <div class="row mb-3">
        <div class="col-md-2 forLabel">
            @Html.Label("startDate", "結案日期", new { @class = "Label" })
        </div>
        <div class="col-md">
            <input type="text" name="startDate" id="startDate" class="form-control datePicker col-md" value=@startDate autocomplete="off" />
        </div>
        <div class="col-md-1 forLabel">
            @Html.Label("endDate", "至", new { @class = "m-0" })
        </div>
        <div class="col-md">
            <input type="text" name="endDate" id="endDate" class="form-control datePicker col-md" value=@endDate autocomplete="off" />
        </div>
        <input type="button" id="updateBtn" value="更新圖表" class="btn searchBtn col-3" />

    </div>
    <p class="pwdAlert circle pl-3 ">數據為已結案之案件(不包含強制結案及尚未結案之案件)</p>
    <p class="pwdAlert circle pl-3 ">若無進行篩選則顯示今年度資料</p>
</div>






<div class="col-8 mt-4 mx-auto">
    <canvas id="myChart"></canvas>
</div>
@section scripts
{
    <script src="~/Scripts/Chart.js"></script>
    <script src="~/Scripts/Chart.bundle.js"></script>

    @*統計報表*@
    <script>

    var labels = new Array();
    @foreach (var sort in sorts)
    {
        @:labels.push('@sort');
    }

    var suppliers = new Array();
    @foreach (var supplier in suppliers)
    {
        @:suppliers.push('@supplier');
    }

    var barChartData = {
            labels: labels,
            datasets: []
        };
    var bgColor = new Array();
    bgColor[0] = 'rgba(253, 126, 20, 0.3)';
    bgColor[1] = 'rgba(0, 123, 255, 0.3)';
    bgColor[2] = 'rgba(10, 157, 51, 0.3)';
    bgColor[3] = 'rgba(255, 192, 108, 0.3)';
    bgColor[4] = 'rgba(255, 111, 108, 0.3)';
    bgColor[5] = 'rgba(113, 108,255, 0.3)';
    bgColor[6] = 'rgba(140, 94, 33, 0.3)';

    var borderColor = new Array();
    borderColor[0] = 'rgba(253, 126, 20, 0.6)';
    borderColor[1] = 'rgba(0, 123, 255, 0.6)';
    borderColor[2] = 'rgba(10, 157, 51, 0.6)';
    borderColor[3] = 'rgba(255, 192, 108, 0.6)';
    borderColor[4] = 'rgba(255, 111, 108, 0.6)';
    borderColor[5] = 'rgba(113, 108,255, 0.6)';
    borderColor[6] = 'rgba(140, 94, 33, 0.6)';

        var ctx = document.getElementById('myChart').getContext('2d');
        window.myBar = new Chart(ctx,
            {
                type: 'bar',
                data: barChartData,
                options: {
                    responsive: true,
                    legend: {
                        position: 'top',
                        labels: {
                            // This more specific font property overrides the global property
                            fontColor: 'black',
                            fontSize: 20,
                        }
                    },
                    title: {
                        display: true,
                        text: '報修原因件數 ( X軸:報修原因 / Y軸:件數 )',
                        fontSize: 20,
                    },
                    scales: {
                        yAxes: [
                            {
                                ticks: {
                                    fontSize: 16,
                                    beginAtZero: true
                                }
                            }
                        ],
                        xAxes: [
                            {
                                ticks: {
                                    fontSize: 24,
                                }
                            }
                        ]
                    },

                }
            });




        //取得報表
        function getReports(startDate, endDate) {

            var sJson = JSON.stringify
                ({
                    startDate: startDate,
                    endDate: endDate
                });
            $.ajax({
                method: 'post',
                url: '/Report/sort',
                data: sJson,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                async: true,
                success: function (response) {

                    $.each(suppliers,
                        function(index, supplier) {
                            var list = new Array();
                            var dataSet = {
                                label: supplier,
                                backgroundColor: bgColor[index],
                                borderColor: borderColor[index],
                                borderWidth: 1,
                                data: list
                            };

                            $.each(response,
                                function (i, item) {
                                    if (item.Supplier == supplier) {

                                        $.each(labels,
                                            function(sortIndex, sort) {

                                        if (sort == item.Sort) {
                                            list[sortIndex] = item.Amount;
                                                }
                                            });
                                    }
                                });
                                    barChartData.datasets.push(dataSet);
                                    window.myBar.update();

                        });



                }
            });
        }
        //更新報表
        function updateReports(startDate, endDate) {

            var sJson = JSON.stringify
                ({
                    startDate: startDate,
                    endDate: endDate
                });
            $.ajax({
                method: 'post',
                url: '/Report/sort',
                data: sJson,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                async: true,
                success: function (response) {
                    $.each(suppliers,
                        function(index, supplier) {
                            var list = new Array();
                            var dataSet = {
                                label: supplier,
                                backgroundColor: bgColor[index],
                                borderColor: borderColor[index],
                                borderWidth: 1,
                                data: list
                            };

                            $.each(response,
                                function (i, item) {
                                    if (item.Supplier == supplier) {

                                        $.each(labels,
                                            function(sortIndex, sort) {

                                                if (sort == item.Sort) {
                                                    list[sortIndex] = item.Amount;
                                                }
                                            });
                                    }
                                });
                            barChartData.datasets[index]=dataSet;
                            window.myBar.update();

                        });



                    //$.each(response,
                    //    function (index, item) {
                    //        var list = new Array();
                    //        var dataSet = {
                    //            backgroundColor: bgColor[index],
                    //            borderColor: borderColor[index],
                    //            borderWidth: 1,
                    //            data: list
                    //        };
                    //        dataSet.label = item.Supplier;
                    //        $.each(item.SortList,
                    //            function (i, sortItem) {
                    //                labels[i] = sortItem.Sort;
                    //                list[i] = sortItem.Amount;
                    //            });
                    //        barChartData.datasets[index] = dataSet;
                    //        window.myBar.update();
                    //    });
                }
            });
        }


        getReports();


        $(function () {
            $('#updateBtn').click(function () {
                var startDate = $('#startDate').val();
                var endDate = $('#endDate').val();
                updateReports(startDate, endDate);
            });
        });

    </script>

    @*搜尋日期欄位若有填起始值就要填結束日期*@
    <script>
        $(function () {
            $('#startDate').on('change',
                function () {
                    $('#endDate').focus();
                });

        });
    </script>
}

