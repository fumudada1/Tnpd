@using TnpdModels
@model TnpdModels.Filedownload

@{
    ViewBag.Title = "書表檔案下載新增";
}

<h2>書表檔案下載新增</h2>

    @using (Html.BeginForm()) {

    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    @ViewBag.Message
    <fieldset>
        <legend>File download</legend>

          <div class="editor-label">
            @Html.LabelFor(model => model.MetaId)

        </div>
        <div class="editor-field">
            @Html.DropDownList("MetaId")
            @Html.ValidationMessageFor(model => model.MetaId)


        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Subject)

        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Subject,new { placeholder=ModelsAttributeHelper<TnpdModels.Filedownload>.GetDisplayName("Subject") })
            @Html.ValidationMessageFor(model => model.Subject)
       
            
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CatalogId)

        </div>
        <div class="editor-field">
            @Html.DropDownList("CatalogId")
            @Html.ValidationMessageFor(model => model.CatalogId)
       
            
        </div>
                <div class="editor-label">
            @Html.LabelFor(model => model.StartDate)

        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.StartDate,"{0:d}",new {@class="datepicker",target="" })
            @Html.ValidationMessageFor(model => model.StartDate)
       
            
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.EndDate)

        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.EndDate,"{0:d}",new {@class="datepicker",target="" })
            @Html.ValidationMessageFor(model => model.EndDate)
       
            
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Article)

        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.Article,new { @class = "ckeditor" })
            @Html.ValidationMessageFor(model => model.Article)
       
            
        </div>
                <div class="editor-label">
            @Html.LabelFor(model => model.FiledownloadFiles)

        </div>
        <div class="editor-field">
            <input type="button" value="新增上傳檔案" class="AddItem btn btn-primary"/>
            <p>
                <span>檔案名稱:</span>
                <input name="files[0].Subject" id="files[0].Subject" type="text" size="60" value="附加檔案" />
                <span>檔案路徑:</span>
                <input name="files[0].UpFile" type="text" size="60">
                <input type="button" value="選擇上傳檔案" class="BrowseServer btn btn-primary"/>
            </p>



        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.FiledownloadLinks)

        </div>
        <div class="editor-field">
            <input type="button" value="新增連結" class="AddItem btn btn-primary" />
            <p>
                <span>連結名稱:</span>
                <input name="links[0].Subject" id="links[0].Subject" type="text" size="60" value="附加連結" />
                <span>
                    連結網址:</span>
                <input name="links[0].LinkUrl" id="links[0].LinkUrl" type="text" size="60" value="" />
                <select id="links[0].Target" name="links[0].Target">
                    <option>另開視窗</option>
                    <option>本地開啟</option>
                </select>
                   
</p>



        </div>



        <div class="editor-label" style="display: none">
            @Html.LabelFor(model => model.IsConfirm)

        </div>
        <div class="editor-field"  style="display: none">
            @Html.DropDownListFor(model => model.IsConfirm, new SelectList(Enum.GetValues(typeof(TnpdModels.BooleanType))))
            @Html.ValidationMessageFor(model => model.IsConfirm)
       
            
        </div>

      

        <p>
            <input type="submit" value="新增" class="btn-button"  />
        </p>
        <p class="bottom-btn">
            <input type="button" onclick="history.back()" class="btn btn-primary btn-gray" value="回列表" />
        </p>
    </fieldset>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript" src="/CKfinder/ckfinder.js"></script>
    <script src="@Url.Content("~/Scripts/ckeditor/ckeditor.js")" type="text/javascript"></script>
    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/themes/base/css")
    <script>
        $(document).ready(function () {
            $(".datepicker").datepicker();
            var editor = CKEDITOR.replace('Article', { filebrowserImageUploadUrl: '/ckfinder/core/connector/aspx/connector.aspx?command=QuickUpload&type=Images&currentFolder=/Cypd' }
            );
            $(".AddItem").click(function () {
                var source = $(this).next();
                var fileSubject = source.children().eq(1).val();
                var len = $(this).parent().children().length - 1;
                var clone = source.clone();
                clone.children().eq(1).val(fileSubject + len);

                clone.children().eq(1).attr('name', clone.children().eq(1).attr('name').replace('[0]', '[' + len + ']'));
                clone.children().eq(3).attr('name', clone.children().eq(3).attr('name').replace('[0]', '[' + len + ']'));
                clone.children().eq(3).val('');
                if (clone.children().length == 4) {
                    clone.children().eq(4).attr('name', clone.children().eq(4).attr('name').replace('[0]', '[' + len + ']'));
                }

                // alert(clone.children().eq(4).attr('name'));
                clone.insertAfter($(this).parent().children().last());
            });
            $("body").on('click', ".BrowseServer", function () {
                var finder = new CKFinder();
                finder.basePath = '/upfiles/'; // The path for the installation of CKFinder (default = "/ckfinder/").
                finder.selectActionFunction = function (fileUrl, data) {

                    $("input[name='" + data["selectActionData"] + "']").val(fileUrl);
                };

                finder.startupPath = 'Files:/Cypd/';
				finder.defaultSortBy = 'date';
                finder.selectActionData = $(this).prev().attr('name');
                finder.resourceType = 'Files';
                //finder.readOnly = true;
                finder.popup();
            });


        });
    </script>

}
