@using TnpdModels
@model TnpdModels.Ese

@{
    ViewBag.Title =   ViewBag.Title;
    List<EseCatalog> newsCatalogs = ViewBag.newsCatalogs;
}

<h2>新增@(ViewBag.Title)</h2>

    @using (Html.BeginForm()) {

    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    @ViewBag.Message
    <fieldset>
        <legend>@ViewBag.Title</legend>

      
        <div class="editor-label">
           
                      
@Html.LabelFor(model => model.Subject)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Subject, new { placeholder = ModelsAttributeHelper<TnpdModels.News>.GetDisplayName("Subject") })
            @Html.ValidationMessageFor(model => model.Subject)
       
            
        </div>
        <div class="editor-label">
           <label> 發布站台設定</label>

        </div>
        <div class="editor-field">
           
            @foreach (var catalog in newsCatalogs)
            {
                <input type="checkbox" value="@catalog.Id" name="newsCatalogID" class="chkCatalog" /> <span>@catalog.WebSite.Subject - @catalog.Subject</span> <br/>
            }
        </div>
    
        <div class="editor-label">
            @Html.LabelFor(model => model.Undertaking_Unit)

        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Undertaking_Unit,new { placeholder=ModelsAttributeHelper<TnpdModels.Ese>.GetDisplayName("Undertaking_Unit") })
            @Html.ValidationMessageFor(model => model.Undertaking_Unit)
       
            
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Apply_method)

        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Apply_method,new { placeholder=ModelsAttributeHelper<TnpdModels.Ese>.GetDisplayName("Apply_method") })
            @Html.ValidationMessageFor(model => model.Apply_method)
       
            
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.NeedDoc)

        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.NeedDoc,new { placeholder=ModelsAttributeHelper<TnpdModels.Ese>.GetDisplayName("NeedDoc") })
            @Html.ValidationMessageFor(model => model.NeedDoc)
       
            
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Process)

        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Process,new { placeholder=ModelsAttributeHelper<TnpdModels.Ese>.GetDisplayName("Process") })
            @Html.ValidationMessageFor(model => model.Process)
       
            
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Pdate)

        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Pdate,new { placeholder=ModelsAttributeHelper<TnpdModels.Ese>.GetDisplayName("Pdate") })
            @Html.ValidationMessageFor(model => model.Pdate)
       
            
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Tel)

        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Tel,new { placeholder=ModelsAttributeHelper<TnpdModels.Ese>.GetDisplayName("Tel") })
            @Html.ValidationMessageFor(model => model.Tel)
       
            
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Fax)

        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Fax,new { placeholder=ModelsAttributeHelper<TnpdModels.Ese>.GetDisplayName("Fax") })
            @Html.ValidationMessageFor(model => model.Fax)
       
            
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Mail)

        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Mail,new { placeholder=ModelsAttributeHelper<TnpdModels.Ese>.GetDisplayName("Mail") })
            @Html.ValidationMessageFor(model => model.Mail)
       
            
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Remark)

        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Remark,new { placeholder=ModelsAttributeHelper<TnpdModels.Ese>.GetDisplayName("Remark") })
            @Html.ValidationMessageFor(model => model.Remark)
       
            
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Online)

        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Online,new { placeholder=ModelsAttributeHelper<TnpdModels.Ese>.GetDisplayName("Online") })
            @Html.ValidationMessageFor(model => model.Online)
       
            
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Status)

        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.Status, new SelectList(Enum.GetValues(typeof(TnpdModels.BooleanType))))
            @Html.ValidationMessageFor(model => model.Status)
       
            
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Memo)

        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.Memo,new { @style = "height: 150px",placeholder=ModelsAttributeHelper<TnpdModels.Ese>.GetDisplayName("Memo") })
            @Html.ValidationMessageFor(model => model.Memo)
       
            
        </div>


        <div class="editor-label">
            @Html.LabelFor(model => model.Fileses)

        </div>
        <div class="editor-field">
            <input type="button" value="新增上傳檔案數量" class="AddItem btn btn-primary"/>
            <p>
                <span>檔案說明:</span>
                <input name="newsFiles[0].Subject" id="newsFiles[0].Subject" type="text" size="60"  value="請詳細輸入檔案說明" />
                <span>檔案路徑:</span>
                <input name="newsFiles[0].UpFile" type="text" size="60" placeholder="請點旁邊按鈕選擇(上傳)檔案">
                <input type="button" value="選擇(上傳)檔案" class="BrowseFilesServer btn btn-primary"/>
            </p>

        </div>
       
        <p>
            <input type="submit" value="新增" class="btn-button"  /> 
        </p>
		 <p class="bottom-btn">
    <input type="button" onclick="history.back()" class="btn btn-primary" value="回列表" /> 
    </p>
    </fieldset>
    }



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript" src="/CKfinder/ckfinder.js"></script>
   
    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/themes/base/css")
    <script>
        $(document).ready(function () {
            $('.chkCatalog').first().prop("checked", true);
            $(".datepicker").datepicker();
          
            $(".AddItem").click(function () {
                var source = $(this).next();
                var fileSubject = source.children().eq(1).val();
                var len = $(this).parent().children().length - 1;
                var clone = source.clone();
                clone.children().eq(1).val(fileSubject + len);

                clone.children().eq(1).attr('name', clone.children().eq(1).attr('name').replace('[0]', '[' + len + ']'));
                clone.children().eq(3).attr('name', clone.children().eq(3).attr('name').replace('[0]', '[' + len + ']'));
                clone.children().eq(3).val('');
                if (clone.children().length == 4) {
                    clone.children().eq(4).attr('name', clone.children().eq(4).attr('name').replace('[0]', '[' + len + ']'));
                }
                if (clone.children().length == 6) {
                    clone.children().eq(5).attr('name', clone.children().eq(5).attr('name').replace('[0]', '[' + len + ']'));
                }

                clone.insertAfter($(this).parent().children().last());
            });

            $("body").on('click', ".BrowseFilesServer", function () {
                var finder = new CKFinder();
                finder.basePath = '/upfiles/'; // The path for the installation of CKFinder (default = "/ckfinder/").
                finder.selectActionFunction = function (fileUrl, data) {

                    $("input[name='" + data["selectActionData"] + "']").val(decodeURIComponent(fileUrl));
                    $.post("/office/WordToPdf", { url: fileUrl })
                        .done(function (data) {
                            // alert( data);
                        });
                };

                finder.startupPath = 'Files:/@ViewBag.SiteCode/';
                finder.defaultSortBy = 'date';
                finder.selectActionData = $(this).prev().attr('name');
                finder.resourceType = 'Files';
                //finder.readOnly = true;
                finder.popup();
            });

            $("body").on('click', ".BrowseImagesServer", function () {
                var finder = new CKFinder();
                finder.basePath = '/upfiles/'; // The path for the installation of CKFinder (default = "/ckfinder/").
                finder.selectActionFunction = function (fileUrl, data) {
                    $("img[name='" + data["selectActionData"].replace('.UpFile', '.Img') + "']").attr('src', decodeURIComponent(fileUrl).replace('/images/', '/_thumbs/images/'));

                    $("input[name='" + data["selectActionData"] + "']").val(decodeURIComponent(fileUrl));

                };

                finder.startupPath = 'Images:/@ViewBag.SiteCode/';
                finder.defaultSortBy = 'date';
                finder.selectActionData = $(this).prev().attr('name');
                finder.resourceType = 'Images';
                //finder.readOnly = true;
                finder.popup();
            });


        });
    </script>

}
